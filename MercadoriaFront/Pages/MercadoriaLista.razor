@page "/mercadoria"
@using MercadoriaFront.Helpers
@using MercadoriaFront.Models
@using System.Net.Http
@using System.Text.Json
@inject Api api

<h1>Mercadoria</h1>

@if (Objetos == null)
{
    <p><strong>Carregando...</strong></p>
}
else
{
    <div class="table-container">
        <a href=@($"/mercadoria/{Acoes.Inserir}") class="btn btn-primary mb-3">Inserir</a>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">
                        Nome
                        <button class="btn btn-link" @onclick='() => SortByColumn("nome", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("nome", "DESC")'>↓</button>
                    </th>
                    <th scope="col">
                        Quantidade
                        <button class="btn btn-link" @onclick='() => SortByColumn("quantidade", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("quantidade", "DESC")'>↓</button>
                    </th>
                    <th scope="col">
                        Peso
                        <button class="btn btn-link" @onclick='() => SortByColumn("peso", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("peso", "DESC")'>↓</button>
                    </th>
                    <th scope="col">
                        Data de Cadastro
                        <button class="btn btn-link" @onclick='() => SortByColumn("datacadastro", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("datacadastro", "DESC")'>↓</button>
                    </th>
                    <th scope="col">
                        Setor
                        <button class="btn btn-link" @onclick='() => SortByColumn("setor", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("setor", "DESC")'>↓</button>
                    </th>
                    <th scope="col">
                        Valor
                        <button class="btn btn-link" @onclick='() => SortByColumn("valor", "ASC")'>↑</button>
                        <button class="btn btn-link" @onclick='() => SortByColumn("valor", "DESC")'>↓</button>
                    </th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
            @foreach(var obj in Objetos)
            {
                <tr>
                    <td>@obj.Nome</td>
                    <td>@obj.Quantidade Kgs</td>
                    <td>@obj.Peso</td>
                    <td>@obj.DataCadastro?.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@obj.Setor</td>
                    <td>@obj.Valor.ToString("C2")</td>
                    <td class="table-actions">
                        <a href=@($"/mercadoria/{Acoes.Consultar}/{obj.Id}") class="btn btn-secondary">Consultar</a>
                        <a href=@($"/mercadoria/{Acoes.Alterar}/{obj.Id}") class="btn btn-warning">Alterar</a>
                        <a href=@($"/mercadoria/{Acoes.Excluir}/{obj.Id}") class="btn btn-danger">Excluir</a>
                    </td>
                </tr>
            }      
            </tbody>  
        </table>
    </div>
}

@code {
    private IList<Mercadoria>? Objetos { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        Objetos = await api.GetAsync<Mercadoria>("/api/mercadoria");
    }

    private async Task SortByColumn(string orderByColumn, string orderByDirection)
    {
        Objetos = await api.GetFilteredMercadorias<Mercadoria>("/api/mercadoria", orderByColumn, orderByDirection);
    }
}